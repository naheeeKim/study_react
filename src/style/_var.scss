@use "sass:math";
@use "sass:list";

$breakpoint-laptop-lg: 1799px;
$breakpoint-laptop-md: 1599px;
$breakpoint-laptop-sm: 1399px;
$breakpoint-laptop: 1199px;
$breakpoint-tablet: 999px;
$breakpoint-tablet-sm: 799px;
$breakpoint-mobile: 599px;
$breakpoint-mobile-sm: 399px;
$breakpoint-min: 320px;

$app-width: 1920px;
$app-height: 1080px;

//inmotion
$inmotion-distance: 3rem;
$inmotion-duration: 1000ms;
$inmotion-ease: cubic-bezier(0.37, 0.04, 0.6, 0.99);
$hoverTransition: 350ms cubic-bezier(0.25, 0.46, 0.45, 0.94);

// gutter
$gutter: 80px;
$gutter-laptop: 42px;
$gutter-mobile: 16px;

//header
$header-z-index: 99;
$header-height: 80px;
$header-height-tablet: 80px;
$header-height-mobile: 64px;

// flex container properties
$start: flex-start;
$end: flex-end;
$center: center;
$between: space-between;
$evenly: space-evenly;
$around: space-around;

@mixin h-100lvh() {
  height: 100vh;
  height: 100lvh;
}

@mixin mh-100lvh() {
  min-height: 100vh;
  min-height: 100lvh;
}
@mixin h-100svh() {
  height: 100vh;
  height: 100svh;
}

@mixin mh-100svh() {
  min-height: 100vh;
  min-height: 100svh;
}

@mixin h-100dvh() {
  height: 100vh;
  height: 100dvh;
}

@mixin mh-100dvh() {
  min-height: 100vh;
  min-height: 100dvh;
}

@mixin fullsize() {
  position: absolute;
  width: 100%;
  height: 100%;
}

@mixin pos-x() {
  position: absolute;
  left: 50%;
  transform: translateX(-50%);
}
@mixin pos-y() {
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
}
@mixin pos-xy() {
  position: absolute;
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
}

@mixin ellipsis($lines: null) {
  @if ($lines == null) {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
  } @else {
    display: block;
    display: -webkit-box;
    overflow: hidden;
    text-overflow: ellipsis;
    -webkit-line-clamp: $lines;
    -webkit-box-orient: vertical;
  }
}

@mixin fit-to-content {
  min-width: max-content;
  max-width: max-content;
}

@function to-vw($value, $base: $app-width) {
  @return math.div($value, $base) * 100vw;
}

@function to-rem($value, $base: var(--base-font-size)) {
  @return calc($value / $base * var(--default-font-size));
}

@function multi-to-rem($sizes...) {
  $sizes_rem: ();

  @each $size in $sizes {
    $sizes_rem: list.append($sizes_rem, to-rem($size));
  }

  @return $sizes_rem;
}

// default: center align
@mixin flex-factory($direction: row, $justify: center, $align: center) {
  display: flex;
  justify-content: $justify;
  align-items: $align;
  flex-direction: $direction;
}

$easeInSine: cubic-bezier(0.47, 0, 0.745, 0.715);
$easeOutSine: cubic-bezier(0.39, 0.575, 0.565, 1);
$easeInOutSine: cubic-bezier(0.39, 0.575, 0.565, 1);

$easeInQuad: cubic-bezier(0.55, 0.085, 0.68, 0.53);
$easeOutQuad: cubic-bezier(0.25, 0.46, 0.45, 0.94);
$easeInOutQuad: cubic-bezier(0.25, 0.46, 0.45, 0.94);

$easeInCubic: cubic-bezier(0.55, 0.055, 0.675, 0.19);
$easeOutCubic: cubic-bezier(0.215, 0.61, 0.355, 1);
$easeInOutCubic: cubic-bezier(0.215, 0.61, 0.355, 1);

$easeInQuart: cubic-bezier(0.895, 0.03, 0.685, 0.22);
$easeOutQuart: cubic-bezier(0.165, 0.84, 0.44, 1);
$easeInOutQuart: cubic-bezier(0.165, 0.84, 0.44, 1);

$easeInQuint: cubic-bezier(0.755, 0.05, 0.855, 0.06);
$easeOutQuint: cubic-bezier(0.23, 1, 0.32, 1);
$easeInOutQuint: cubic-bezier(0.23, 1, 0.32, 1);

$easeInExpo: cubic-bezier(0.95, 0.05, 0.795, 0.035);
$easeOutExpo: cubic-bezier(0.19, 1, 0.22, 1);
$easeInOutExpo: cubic-bezier(0.19, 1, 0.22, 1);

$easeInCirc: cubic-bezier(0.6, 0.04, 0.98, 0.335);
$easeOutCirc: cubic-bezier(0.075, 0.82, 0.165, 1);
$easeInOutCirc: cubic-bezier(0.075, 0.82, 0.165, 1);

$easeInBack: cubic-bezier(0.6, -0.28, 0.735, 0.045);
$easeOutBack: cubic-bezier(0.175, 0.885, 0.32, 1.275);
$easeInOutBack: cubic-bezier(0.68, -0.55, 0.265, 1.55);

$easeInOutFast: cubic-bezier(1, 0, 0, 1);

$authenticMotion: cubic-bezier(0.4, 0, 0.2, 1);
